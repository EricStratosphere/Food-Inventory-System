<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        7/8Bq2i1aG0oG3cAAAAASUVORK5CYII=
</value>
  </data>
</root>